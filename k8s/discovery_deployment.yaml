---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: discovery
  name: discovery
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: discovery
  strategy: 
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: discovery
    spec:
      containers:
      - image: gcr.io/automatic-hawk-276011/discovery_with_log:latest
        name: discovery   
        ports:
        - name: main
          protocol: TCP
          containerPort: 1111
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 1111
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 1111
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1    
        env:
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
            - name: varlog
              mountPath: /tmp
              # subPath: $(NAME)
                # fieldRef:
                    # fieldPath: metadata.namespace_metadata.name_metadata.uid
            # - name: varlibdockercontainers
              # mountPath: /var/lib/docker/containers   
      - image: busybox
        name: count-log-1
        args: [/bin/sh, -c, 'tail -n+1 -f /tmp/output.log']
        volumeMounts:
            - name: varlog
              mountPath: /tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30        
      volumes:
        - name: varlog
          emptyDir: {}
        # - name: varlog
          # hostPath:
            # path: "/var/log/$NAMESPACE_$NAME_$UID"
        # - name: varlibdockercontainers
          # hostPath:
            # path: /var/lib/docker/containers  
      
---

apiVersion: v1
kind: Service
metadata:
  name: discovery
  labels:
    app: discovery
spec:
  selector:
    app: discovery
  type: NodePort
  ports:
  - port: 1111
    protocol: TCP
    targetPort: 1111
    nodePort: 30001
